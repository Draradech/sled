# SLED configuration for emscripten/WASM builds


## NOTICE:
## Use `make clean` after you modified this file
##

   ###########################
   # Platform specific flags #
   ###########################

CC := emcc

## ASYNCIFY is needed to allow for yielding in wasm,
## or else we would block the entire browser thread while running
CFLAGS := -s ASYNCIFY=1
## to minimize performance losses by ASYNCIFY, optimize a lot
CFLAGS += -flto -O3
## For debugging, uncomment the following, and adjust the base URL to your web server
#CFLAGS += -g4 --source-map-base <base url>


   ####################
   # General settings #
   ####################

## executable name
## emcc determines what to output based on the file extension.
## In this case, we will get a sled.wasm (the compiled module) and a sled.js (runtime code to handle the module easily)
PROJECT := sled.js

## Debug mode
## 0 -> Compile with optimization and without debug symbols
## 1 -> Compile without optimization and with debug symbols and define DEBUG
DEBUG := 0

## Static vs. Dynamic linking
## 0 -> dynamic linking (use system libs)
## 1 -> static linking (bundle libs into exe)
STATIC := 1

## Which platform to use (from src/os/os_*)
PLATFORM := emscripten

## Which output module to us (from src/modules/out_*)
DEFAULT_OUTMOD := emscripten_canvas2d

## Directory to put modules into
DEFAULT_MODULEDIR := "./modules"


   ##########################
   # Module build selection #
   ##########################

## required output module
MODULES := out_$(DEFAULT_OUTMOD)

## single modules for testing purposes
#MODULES += gfx_clock
#MODULES += gfx_test
#MODULES += gfx_twinkle

## Build all background and filter modules
#MODULES += $(BGMMODS_DEFAULT)
#MODULES += $(FLTMODS_DEFAULT)

## Build all gfx modules (from GNUmakefile)
## Comment this out if you want to build only single modules
#MODULES += $(GFXMODS_DEFAULT)

BROKEN_MODULES := gfx_ursuppe2

CANT_COMPILE_MODULES := gfx_tron
NON_APPLICABLE_MODULES := gfx_ip

# some tested, working modules as of 20201229
#MODULES += gfx_affinematrix gfx_candyflow gfx_clock gfx_checkerboard gfx_colorwheel
#MODULES += gfx_disturbedcandy gfx_gol gfx_golc gfx_ghostery gfx_balls gfx_bttrblls
#MODULES += gfx_clock gfx_partirush gfx_cube gfx_ghostery gfx_glowfield
#MODULES += gfx_invfourier gfx_mandelbrot gfx_mandelbrot2 gfx_math_sinpi gfx_matrix gfx_maze
#MODULES += gfx_no13 gfx_noisewarp gfx_partirush gfx_plasma gfx_rainbow gfx_random_rects
#MODULES += gfx_random_static gfx_reddot gfx_rgbmatrix gfx_rule90
#MODULES += gfx_sinefield gfx_sinematrix gfx_snek
#MODULES += gfx_sort1D gfx_sort2D gfx_sparkburn gfx_starfield gfx_testmatrix
#MODULES += gfx_text gfx_twinkle gfx_ursuppe gfx_wator gfx_xorrid

MODULES += $(GFXMODS_DEFAULT)
MODULES := $(filter-out $(NON_APPLICABLE_MODULES),$(MODULES))
MODULES := $(filter-out $(CANT_COMPILE_MODULES),$(MODULES))
MODULES := $(filter-out $(BROKEN_MODULES),$(MODULES))

   ############################
   # Output size configuraion #
   ############################

## X and Y dimensions are determined by the canvas size at runtime,
## so they are not explicitly configured here
